{
    "converted": false,
    "GoldenConversations": "{site: amzn1.ask.skill.e5212077-3ccb-401a-93b6-bb5049d4e747}\n\n{dialogName: RequestVolunteerOnce0}\n{start}\nU: necesito un voluntario\nU: { userNlg: USetRequestVolunteer0() }\nA: { nlg: request(api=APIValidateArgsOnce, [{response=RequestServiceResponse(),arguments=[service]}]) }\nA: para qué servicio\nU: un [perro guía|service -> service0]\nU: { userNlg: USetInformService(service=$service0) }\nA: { nlg: request(api=APIValidateArgsOnce, [{response=RequestDateResponse(),arguments=[date]}]) }\nA: cuándo\nU: [mañana|AMAZON.DATE -> date0]\nU: { userNlg: USetInformDate(date=$date0) }\nA: { nlg: request(api=APIValidateArgsOnce, [{response=RequestTimeResponse(),arguments=[time]}]) }\nA: a qué hora?\nU: a [las 10 a m|AMAZON.TIME -> time0]\nU: { userNlg: USetInformTime(time=$time0) }\nA: { nlg: request(api=APIValidateArgsOnce, [{response=RequestDurationResponse(),arguments=[duration]}]) }\nA: por cuánto tiempo?\nU: [una hora|AMAZON.DURATION -> duration0]\nU: { userNlg: USetInformDuration(duration=$duration0) }\nA: { call: APIValidateArgsOnce(service=$service0, date=$date0, time=$time0, duration=$duration0) -> statusResponse0 }\nA: { nlg: notifySuccess(api=APIValidateArgsOnce, response=ConfirmRequestResponse(statusResponse=$statusResponse0)) }\nA: { nlg: offer(api=APIRequestVolunteer, response=ConfirmRequestResponse(statusResponse=$statusResponse0), carryover_arguments=[], requested_arguments=[]) }\nA: ok. voy a solicitar el voluntario... ok?\nU: sí\nU: { userNlg: USetAffirm() }\nA: { call: APIRequestVolunteer() -> statusResponse1 }\nA: { nlg: notifySuccess(api=APIRequestVolunteer, response=RequestConfirmedResponse(statusResponse=$statusResponse1)) }\nA: El voluntario fue solicitado.\n{end}\n\n{dialogName: RequestVolunteerOnce1}\n{start}\nU: necesito un voluntario para [acompañamiento|service -> service0]\nU: { userNlg: USetRequestVolunteer1(service=$service0) }\nA: { nlg: request(api=APIValidateArgsOnce, [{response=RequestDateResponse(),arguments=[date]}]) }\nA: cuándo\nU: el [25 de septiembre|AMAZON.DATE -> date0]\nU: { userNlg: USetInformDate(date=$date0) }\nA: { nlg: request(api=APIValidateArgsOnce, [{response=RequestTimeResponse(),arguments=[time]}]) }\nA: a qué hora?\nU: a las [10 de la mañana|AMAZON.TIME -> time0]\nU: { userNlg: USetInformTime(time=$time0) }\nA: { nlg: request(api=APIValidateArgsOnce, [{response=RequestDurationResponse(),arguments=[duration]}]) }\nA: por cuánto tiempo?\nU: [una hora|AMAZON.DURATION -> duration0]\nU: { userNlg: USetInformDuration(duration=$duration0) }\nA: { call: APIValidateArgsOnce(service=$service0, date=$date0, time=$time0, duration=$duration0) -> statusResponse0 }\nA: { nlg: notifySuccess(api=APIValidateArgsOnce, response=ConfirmRequestResponse(statusResponse=$statusResponse0)) }\nA: { nlg: offer(api=APIRequestVolunteer, response=ConfirmRequestResponse(statusResponse=$statusResponse0), carryover_arguments=[], requested_arguments=[]) }\nA: ok. voy a solicitar el voluntario... ok?\nU: sí\nU: { userNlg: USetAffirm() }\nA: { call: APIRequestVolunteer() -> statusResponse1 }\nA: { nlg: notifySuccess(api=APIRequestVolunteer, response=RequestConfirmedResponse(statusResponse=$statusResponse1)) }\nA: El voluntario fue solicitado.\n{end}\n\n{dialogName: RequestVolunteerOnce2}\n{start}\nU: necesito un voluntario para [acompañamiento|service -> service0] [pasado mañana|AMAZON.DATE -> date0]\nU: { userNlg: USetRequestVolunteer2(service=$service0, date=$date0) }\nA: { nlg: request(api=APIValidateArgsOnce, [{response=RequestTimeResponse(),arguments=[time]}]) }\nA: a qué hora?\nU: a las [cinco de la tarde|AMAZON.TIME -> time0]\nU: { userNlg: USetInformTime(time=$time0) }\nA: { nlg: request(api=APIValidateArgsOnce, [{response=RequestDurationResponse(),arguments=[duration]}]) }\nA: por cuánto tiempo?\nU: [una hora|AMAZON.DURATION -> duration0]\nU: { userNlg: USetInformDuration(duration=$duration0) }\nA: { call: APIValidateArgsOnce(service=$service0, date=$date0, time=$time0, duration=$duration0) -> statusResponse0 }\nA: { nlg: notifySuccess(api=APIValidateArgsOnce, response=ConfirmRequestResponse(statusResponse=$statusResponse0)) }\nA: { nlg: offer(api=APIRequestVolunteer, response=ConfirmRequestResponse(statusResponse=$statusResponse0), carryover_arguments=[], requested_arguments=[]) }\nA: ok. voy a solicitar el voluntario... ok?\nU: sí\nU: { userNlg: USetAffirm() }\nA: { call: APIRequestVolunteer() -> statusResponse1 }\nA: { nlg: notifySuccess(api=APIRequestVolunteer, response=RequestConfirmedResponse(statusResponse=$statusResponse1)) }\nA: El voluntario fue solicitado.\n{end}\n\n{dialogName: RequestVolunteerOnce3}\n{start}\nU: necesito un voluntario para [acompañamiento|service -> service0]\nU: { userNlg: USetRequestVolunteer1(service=$service0) }\nA: { nlg: request(api=APIValidateArgsOnce, [{response=RequestDateResponse(),arguments=[date]}]) }\nA: cuándo\nU: [mañana|AMAZON.DATE -> date0]  [al mediodía|AMAZON.TIME -> time0]\nU: { userNlg: USetInformDateTime(date=$date0, time=$time0) }\nA: { nlg: request(api=APIValidateArgsOnce, [{response=RequestDurationResponse(),arguments=[duration]}]) }\nA: por cuánto tiempo?\nU: [una hora|AMAZON.DURATION -> duration0]\nU: { userNlg: USetInformDuration(duration=$duration0) }\nA: { call: APIValidateArgsOnce(service=$service0, date=$date0, time=$time0, duration=$duration0) -> statusResponse0 }\nA: { nlg: notifySuccess(api=APIValidateArgsOnce, response=ConfirmRequestResponse(statusResponse=$statusResponse0)) }\nA: { nlg: offer(api=APIRequestVolunteer, response=ConfirmRequestResponse(statusResponse=$statusResponse0), carryover_arguments=[], requested_arguments=[]) }\nA: ok. voy a solicitar el voluntario... ok?\nU: sí\nU: { userNlg: USetAffirm() }\nA: { call: APIRequestVolunteer() -> statusResponse1 }\nA: { nlg: notifySuccess(api=APIRequestVolunteer, response=RequestConfirmedResponse(statusResponse=$statusResponse1)) }\nA: El voluntario fue solicitado.\n{end}\n\n{dialogName: RequestVolunteerOnce4}\n{start}\nU: necesito un voluntario para [acompañamiento|service -> service0] el [cuatro de agosto|AMAZON.DATE -> date0] a las [trece horas|AMAZON.TIME -> time0]\nU: { userNlg: USetRequestVolunteer3(service=$service0, date=$date0, time=$time0) }\nA: { nlg: request(api=APIValidateArgsOnce, [{response=RequestDurationResponse(),arguments=[duration]}]) }\nA: por cuánto tiempo?\nU: [una hora|AMAZON.DURATION -> duration0]\nU: { userNlg: USetInformDuration(duration=$duration0) }\nA: { call: APIValidateArgsOnce(service=$service0, date=$date0, time=$time0, duration=$duration0) -> statusResponse0 }\nA: { nlg: notifySuccess(api=APIValidateArgsOnce, response=ConfirmRequestResponse(statusResponse=$statusResponse0)) }\nA: { nlg: offer(api=APIRequestVolunteer, response=ConfirmRequestResponse(statusResponse=$statusResponse0), carryover_arguments=[], requested_arguments=[]) }\nA: ok. voy a solicitar el voluntario... ok?\nU: sí\nU: { userNlg: USetAffirm() }\nA: { call: APIRequestVolunteer() -> statusResponse1 }\nA: { nlg: notifySuccess(api=APIRequestVolunteer, response=RequestConfirmedResponse(statusResponse=$statusResponse1)) }\nA: El voluntario fue solicitado.\n{end}\n\n{dialogName: RequestVolunteerRecurring0}\n{start}\nU: necesito un voluntario para [acompañamiento|service -> service0] todos [los lunes|AMAZON.DayOfWeek -> dow0]\nU: { userNlg: USetRequestVolunteer4(dow=$dow0, service=$service0) }\nA: { nlg: request(api=APIValidateArgsRecurring, [{response=RequestTimeResponse(),arguments=[time]}]) }\nA: a qué hora?\nU: a las [7 a m|AMAZON.TIME -> time0]\nU: { userNlg: USetInformTime(time=$time0) }\nA: { nlg: request(api=APIValidateArgsRecurring, [{response=RequestDurationResponse(),arguments=[duration]}]) }\nA: por cuánto tiempo?\nU: [una hora|AMAZON.DURATION -> duration0]\nU: { userNlg: USetInformDuration(duration=$duration0) }\nA: { nlg: request(api=APIValidateArgsRecurring, [{response=RequestSinceResponse(),arguments=[since]}]) }\nA: desde qué día?\nU: desde el [primero de octubre|AMAZON.DATE -> since0]\nU: { userNlg: USetInformDate(date=$since0) }\nA: { nlg: request(api=APIValidateArgsRecurring, [{response=RequestUntilResponse(),arguments=[until]}]) }\nA: hasta qué día?\nU: hasta el [31 de diciembre|AMAZON.DATE -> until0]\nU: { userNlg: USetInformDate(date=$until0) }\nA: { call: APIAddDow(dow=$dow0, time=$time0, duration=$duration0) -> statusResponse0 }\nA: { nlg: notifySuccess(api=APIAddDow, response=NewDowResponse()) }\nA: { nlg: offer(api=APIAddDow, response=NewDowResponse(), carryover_arguments=[], requested_arguments=[]) }\nA: quiere agregar otro día de la semana?\nU: sí\nU: { userNlg: USetAffirm() }\nA: { nlg: request(api=APIAddDow, [{response=RequestDowResponse(),arguments=[dow]}]) }\nA: qué día quiere agregar?\nU: los [martes|AMAZON.DayOfWeek -> dow1]\nU: { userNlg: USetInformDow(dow=$dow1) }\nA: { nlg: request(api=APIAddDow, [{response=RequestTimeResponse(),arguments=[time]}]) }\nA: a qué hora?\nU: a las [siete y media de la mañana|AMAZON.TIME -> time1]\nU: { userNlg: USetInformTime(time=$time1) }\nA: { nlg: request(api=APIAddDow, [{response=RequestDurationResponse(),arguments=[duration]}]) }\nA: por cuánto tiempo?\nU: [una hora|AMAZON.DURATION -> duration1]\nU: { userNlg: USetInformDuration(duration=$duration1) }\nA: { call: APIAddDow(dow=$dow1, time=$time1, duration=$duration1) -> statusResponse1 }\nA: { nlg: notifySuccess(api=APIAddDow, response=NewDowResponse()) }\nA: { nlg: offer(api=APIAddDow, response=NewDowResponse(), carryover_arguments=[], requested_arguments=[]) }\nA: quiere agregar otro día de la semana?\nU: no\nU: { userNlg: USetDeny() }\nA: { call: APIValidateArgsRecurring(service=$service0, since=$since0, until=$until0, dow=$dow0, time=$time0, duration=$duration0) -> statusResponse2 }\nA: { nlg: notifySuccess(api=APIValidateArgsRecurring, response=ConfirmRequestResponse(statusResponse=$statusResponse2)) }\nA: muy bien, voy a solicitar un voluntario... ok?\nU: sí\nU: { userNlg: USetAffirm() }\nA: { call: APIRequestVolunteer() -> statusResponse3 }\nA: { nlg: notifySuccess(api=APIRequestVolunteer, response=RequestConfirmedResponse(statusResponse=$statusResponse3)) }\nA: el voluntario ha sido solicitado\n{end}\n\n{dialogName: RequestVolunteerRecurring1}\n{start}\nU: necesito un voluntario para [acompañamiento|service -> service0] todos [los lunes|AMAZON.DayOfWeek -> dow0]\nU: { userNlg: USetRequestVolunteer4(dow=$dow0, service=$service0) }\nA: { nlg: request(api=APIValidateArgsRecurring, [{response=RequestTimeResponse(),arguments=[time]}]) }\nA: a qué hora?\nU: a las [7 a m|AMAZON.TIME -> time0]\nU: { userNlg: USetInformTime(time=$time0) }\nA: { nlg: request(api=APIValidateArgsRecurring, [{response=RequestDurationResponse(),arguments=[duration]}]) }\nA: por cuánto tiempo?\nU: [una hora|AMAZON.DURATION -> duration0]\nU: { userNlg: USetInformDuration(duration=$duration0) }\nA: { nlg: request(api=APIValidateArgsRecurring, [{response=RequestSinceResponse(),arguments=[since]}]) }\nA: desde qué día?\nU: desde el [8 de octubre|AMAZON.DATE -> since0]\nU: { userNlg: USetInformDate(date=$since0) }\nA: { nlg: request(api=APIValidateArgsRecurring, [{response=RequestUntilResponse(),arguments=[until]}]) }\nA: hasta qué día?\nU: hasta el [3 de noviembre|AMAZON.DATE -> until0]\nU: { userNlg: USetInformDate(date=$until0) }\nA: { call: APIAddDow(dow=$dow0, time=$time0, duration=$duration0) -> statusResponse0 }\nA: { nlg: notifySuccess(api=APIAddDow, response=NewDowResponse()) }\nA: { nlg: offer(api=APIAddDow, response=NewDowResponse(), carryover_arguments=[], requested_arguments=[]) }\nA: quiere agregar otro día de la semana?\nU: sí\nU: { userNlg: USetAffirm() }\nA: { nlg: request(api=APIAddDow, [{response=RequestDowResponse(),arguments=[dow]}]) }\nA: qué día quiere agregar?\nU: los [martes|AMAZON.DayOfWeek -> dow1] a las [7 a m|AMAZON.TIME -> time1]\nU: { userNlg: USetInformDowTime(dow=$dow1, time=$time1) }\nA: { nlg: request(api=APIAddDow, [{response=RequestDurationResponse(),arguments=[duration]}]) }\nA: por cuánto tiempo?\nU: [dos horas|AMAZON.DURATION -> duration1]\nU: { userNlg: USetInformDuration(duration=$duration1) }\nA: { call: APIAddDow(dow=$dow1, time=$time1, duration=$duration1) -> statusResponse1 }\nA: { nlg: notifySuccess(api=APIAddDow, response=NewDowResponse()) }\nA: { nlg: offer(api=APIAddDow, response=NewDowResponse(), carryover_arguments=[], requested_arguments=[]) }\nA: quiere agregar otro día de la semana?\nU: no\nU: { userNlg: USetDeny() }\nA: { call: APIValidateArgsRecurring(service=$service0, since=$since0, until=$until0, dow=$dow0, time=$time0, duration=$duration0) -> statusResponse2 }\nA: { nlg: notifySuccess(api=APIValidateArgsRecurring, response=ConfirmRequestResponse(statusResponse=$statusResponse2)) }\nA: muy bien, voy a solicitar un voluntario... ok?\nU: sí\nU: { userNlg: USetAffirm() }\nA: { call: APIRequestVolunteer() -> statusResponse3 }\nA: { nlg: notifySuccess(api=APIRequestVolunteer, response=RequestConfirmedResponse(statusResponse=$statusResponse3)) }\nA: el voluntario ha sido solicitado\n{end}\n\n{dialogName: RequestVolunteerRecurring2}\n{start}\nU: necesito un voluntario para [acompañamiento|service -> service0] todos [los viernes|AMAZON.DayOfWeek -> dow0]\nU: { userNlg: USetRequestVolunteer4(dow=$dow0, service=$service0) }\nA: { nlg: request(api=APIValidateArgsRecurring, [{response=RequestTimeResponse(),arguments=[time]}]) }\nA: a qué hora?\nU: a las [7 a m|AMAZON.TIME -> time0]\nU: { userNlg: USetInformTime(time=$time0) }\nA: { nlg: request(api=APIValidateArgsRecurring, [{response=RequestDurationResponse(),arguments=[duration]}]) }\nA: por cuánto tiempo?\nU: [una hora|AMAZON.DURATION -> duration0]\nU: { userNlg: USetInformDuration(duration=$duration0) }\nA: { nlg: request(api=APIValidateArgsRecurring, [{response=RequestSinceResponse(),arguments=[since]}]) }\nA: desde qué día?\nU: desde el [cinco de enero|AMAZON.DATE -> since0]\nU: { userNlg: USetInformDate(date=$since0) }\nA: { nlg: request(api=APIValidateArgsRecurring, [{response=RequestUntilResponse(),arguments=[until]}]) }\nA: hasta qué día?\nU: hasta el [31 de marzo|AMAZON.DATE -> until0]\nU: { userNlg: USetInformDate(date=$until0) }\nA: { call: APIAddDow(dow=$dow0, time=$time0, duration=$duration0) -> statusResponse0 }\nA: { nlg: notifySuccess(api=APIAddDow, response=NewDowResponse()) }\nA: { nlg: offer(api=APIAddDow, response=NewDowResponse(), carryover_arguments=[], requested_arguments=[]) }\nA: quiere agregar otro día de la semana?\nU: no\nU: { userNlg: USetDeny() }\nA: { call: APIValidateArgsRecurring(service=$service0, since=$since0, until=$until0, dow=$dow0, time=$time0, duration=$duration0) -> statusResponse2 }\nA: { nlg: notifySuccess(api=APIValidateArgsRecurring, response=ConfirmRequestResponse(statusResponse=$statusResponse2)) }\nA: muy bien, voy a solicitar un voluntario... ok?\nU: sí\nU: { userNlg: USetAffirm() }\nA: { call: APIRequestVolunteer() -> statusResponse3 }\nA: { nlg: notifySuccess(api=APIRequestVolunteer, response=RequestConfirmedResponse(statusResponse=$statusResponse3)) }\nA: el voluntario ha sido solicitado\n{end}\n\n{dialogName: RequestVolunteerRecurring3}\n{start}\nU: necesito un voluntario para [acompañamiento|service -> service0] todos [los lunes|AMAZON.DayOfWeek -> dow0]\nU: { userNlg: USetRequestVolunteer4(dow=$dow0, service=$service0) }\nA: { nlg: request(api=APIValidateArgsRecurring, [{response=RequestTimeResponse(),arguments=[time]}]) }\nA: a qué hora?\nU: a las [7 a m|AMAZON.TIME -> time0]\nU: { userNlg: USetInformTime(time=$time0) }\nA: { nlg: request(api=APIValidateArgsRecurring, [{response=RequestDurationResponse(),arguments=[duration]}]) }\nA: por cuánto tiempo?\nU: [una hora|AMAZON.DURATION -> duration0]\nU: { userNlg: USetInformDuration(duration=$duration0) }\nA: { nlg: request(api=APIValidateArgsRecurring, [{response=RequestSinceResponse(),arguments=[since]}]) }\nA: desde qué día?\nU: desde el [8 de octubre|AMAZON.DATE -> since0]\nU: { userNlg: USetInformDate(date=$since0) }\nA: { nlg: request(api=APIValidateArgsRecurring, [{response=RequestUntilResponse(),arguments=[until]}]) }\nA: hasta qué día?\nU: hasta el [31 de diciembre|AMAZON.DATE -> until0]\nU: { userNlg: USetInformDate(date=$until0) }\nA: { call: APIAddDow(dow=$dow0, time=$time0, duration=$duration0) -> statusResponse0 }\nA: { nlg: notifySuccess(api=APIAddDow, response=NewDowResponse()) }\nA: { nlg: offer(api=APIAddDow, response=NewDowResponse(), carryover_arguments=[], requested_arguments=[]) }\nA: quiere agregar otro día de la semana?\nU: sí\nU: { userNlg: USetAffirm() }\nA: { nlg: request(api=APIAddDow, [{response=RequestDowResponse(),arguments=[dow]}]) }\nA: qué día quiere agregar?\nU: los [martes|AMAZON.DayOfWeek -> dow1] a las [7 a m|AMAZON.TIME -> time1] por [una hora|AMAZON.DURATION -> duration1]\nU: { userNlg: USetInformDowTimeDuration(dow=$dow1, time=$time1, duration=$duration1) }\nA: { call: APIAddDow(dow=$dow1, time=$time1, duration=$duration1) -> statusResponse1 }\nA: { nlg: notifySuccess(api=APIAddDow, response=NewDowResponse()) }\nA: { nlg: offer(api=APIAddDow, response=NewDowResponse(), carryover_arguments=[], requested_arguments=[]) }\nA: quiere agregar otro día de la semana?\nU: no\nU: { userNlg: USetDeny() }\nA: { call: APIValidateArgsRecurring(service=$service0, since=$since0, until=$until0, dow=$dow0, time=$time0, duration=$duration0) -> statusResponse2 }\nA: { nlg: notifySuccess(api=APIValidateArgsRecurring, response=ConfirmRequestResponse(statusResponse=$statusResponse2)) }\nA: muy bien, voy a solicitar un voluntario... ok?\nU: sí\nU: { userNlg: USetAffirm() }\nA: { call: APIRequestVolunteer() -> statusResponse3 }\nA: { nlg: notifySuccess(api=APIRequestVolunteer, response=RequestConfirmedResponse(statusResponse=$statusResponse3)) }\nA: el voluntario ha sido solicitado\n{end}\n\n",
    "UserUtteranceGroup": {
        "USetInformDowTimeDuration": {
            "args": {
                "dow": "AMAZON.DayOfWeek",
                "time": "AMAZON.TIME",
                "duration": "AMAZON.DURATION"
            },
            "formatters": [
                "${dow} ${time} ${duration}",
                "${dow} ${time} por ${duration}",
                "${dow} a las ${time} ${duration}",
                "${dow} a las ${time} por ${duration}",
                "los ${dow} ${time} ${duration}",
                "los ${dow} ${time} por ${duration}",
                "los ${dow} a las ${time} ${duration}",
                "los ${dow} a las ${time} por ${duration}",
                "todos ${dow} ${time} ${duration}",
                "todos ${dow} ${time} por ${duration}",
                "todos ${dow} a las ${time} ${duration}",
                "todos ${dow} a las ${time} por ${duration}",
                "todos los ${dow} ${time} ${duration}",
                "todos los ${dow} ${time} por ${duration}",
                "todos los ${dow} a las ${time} ${duration}",
                "todos los ${dow} a las ${time} por ${duration}"
            ],
            "dialogAct": "inform",
            "api": null
        },
        "USetInformDowTime": {
            "args": {
                "dow": "AMAZON.DayOfWeek",
                "time": "AMAZON.TIME"
            },
            "formatters": [
                "todos los ${dow} a las ${time}",
                "los ${dow} a las ${time}",
                "${dow} ${time}",
                "${dow} a las ${time}",
                "a las ${time} los ${dow}",
                "a las ${time} todos los ${dow}"
            ],
            "dialogAct": "inform",
            "api": null
        },
        "USetDeny": {
            "args": {},
            "formatters": [
                "no",
                "para nada",
                "no gracias",
                "no ya está bien"
            ],
            "dialogAct": "deny",
            "api": null
        },
        "USetInformDow": {
            "args": {
                "dow": "AMAZON.DayOfWeek"
            },
            "formatters": [
                "todos los ${dow}",
                "los ${dow}",
                "${dow}"
            ],
            "dialogAct": "inform",
            "api": null
        },
        "USetRequestVolunteer4": {
            "args": {
                "dow": "AMAZON.DayOfWeek",
                "service": "service"
            },
            "formatters": [
                "necesito un voluntario para ${service} todos los ${dow}"
            ],
            "dialogAct": "invoke",
            "api": null
        },
        "USetRequestVolunteer3": {
            "args": {
                "service": "service",
                "date": "AMAZON.DATE",
                "time": "AMAZON.TIME"
            },
            "formatters": [
                "quiero ${service} ${date} a las ${time}",
                "pide un voluntario para ${service} el ${date} a las ${time}",
                "quiero un voluntario para ${service} el ${date} a las ${time}",
                "necesito un voluntario para ${service} ${date} a las ${time}"
            ],
            "dialogAct": "invoke",
            "api": null
        },
        "USetInformDateTime": {
            "args": {
                "date": "AMAZON.DATE",
                "time": "AMAZON.TIME"
            },
            "formatters": [
                "el ${date} a las ${time}",
                "a las ${time} de ${date}",
                "a las ${time} del ${date}",
                "${date} a las ${time}"
            ],
            "dialogAct": "inform",
            "api": null
        },
        "USetRequestVolunteer2": {
            "args": {
                "service": "service",
                "date": "AMAZON.DATE"
            },
            "formatters": [
                "quiero un voluntario para ${service} ${date}",
                "quiero un voluntario para ${service} el ${date}",
                "necesito un ${service} para el ${date}",
                "necesito un ${service} el ${date}",
                "pide un ${service} para el ${date}",
                "pide un ${service} para ${date}",
                "necesito un voluntario para ${service} ${date}"
            ],
            "dialogAct": "invoke",
            "api": null
        },
        "USetRequestVolunteer1": {
            "args": {
                "service": "service"
            },
            "formatters": [
                "pídeme un voluntario para ${service}",
                "pídeme un ${service}",
                "necesito ${service}",
                "pide un voluntario para ${service}",
                "quiero un voluntario para ${service}",
                "necesito un voluntario para ${service}"
            ],
            "dialogAct": "invoke",
            "api": null
        },
        "USetAffirm": {
            "args": {},
            "formatters": [
                "perfecto",
                "está bien",
                "hazlo",
                "vamos",
                "vale",
                "ok",
                "sí"
            ],
            "dialogAct": "affirm",
            "api": null
        },
        "USetInformDuration": {
            "args": {
                "duration": "AMAZON.DURATION"
            },
            "formatters": [
                "${duration}",
                "durante ${duration}",
                "por ${duration}"
            ],
            "dialogAct": "inform",
            "api": null
        },
        "USetInformTime": {
            "args": {
                "time": "AMAZON.TIME"
            },
            "formatters": [
                "${time}",
                "a las ${time}",
                "a ${time}"
            ],
            "dialogAct": "inform",
            "api": null
        },
        "USetInformDate": {
            "args": {
                "date": "AMAZON.DATE"
            },
            "formatters": [
                "para el ${date}",
                "para ${date}",
                "${date}"
            ],
            "dialogAct": "inform",
            "api": null
        },
        "USetInformService": {
            "args": {
                "service": "service"
            },
            "formatters": [
                "para ${service}",
                "${service}",
                "necesito ${service}"
            ],
            "dialogAct": "inform",
            "api": null
        },
        "USetRequestVolunteer0": {
            "args": {},
            "formatters": [
                "quiero un voluntario",
                "pide un voluntario",
                "quiero pedir un voluntario",
                "necesito un voluntario"
            ],
            "dialogAct": "invoke",
            "api": null
        },
        "welcome": {
            "args": {},
            "formatters": [
                "let's get started"
            ],
            "dialogAct": "invoke",
            "api": "welcome"
        }
    },
    "ActionAndEntity": {
        "APIs": {
            "APIRequestVolunteer": {
                "args": {},
                "returns": "StatusResponse",
                "nlg": []
            },
            "APIValidateArgsOnce": {
                "args": {
                    "service": {
                        "type": "service"
                    },
                    "date": {
                        "type": "AMAZON.DATE"
                    },
                    "time": {
                        "type": "AMAZON.TIME"
                    },
                    "duration": {
                        "type": "AMAZON.DURATION"
                    }
                },
                "returns": "StatusResponse",
                "nlg": []
            },
            "APIValidateArgsRecurring": {
                "args": {
                    "service": {
                        "type": "service"
                    },
                    "since": {
                        "type": "AMAZON.DATE"
                    },
                    "until": {
                        "type": "AMAZON.DATE"
                    },
                    "dow": {
                        "type": "AMAZON.DayOfWeek"
                    },
                    "time": {
                        "type": "AMAZON.TIME"
                    },
                    "duration": {
                        "type": "AMAZON.DURATION"
                    }
                },
                "returns": "StatusResponse",
                "nlg": []
            },
            "APIAddDow": {
                "args": {
                    "dow": {
                        "type": "AMAZON.DayOfWeek"
                    },
                    "time": {
                        "type": "AMAZON.TIME"
                    },
                    "duration": {
                        "type": "AMAZON.DURATION"
                    }
                },
                "returns": "StatusResponse",
                "nlg": []
            }
        },
        "Types": {
            "StatusResponse": {
                "properties": {
                    "message": "AMAZON.Book",
                    "status": "AMAZON.NUMBER"
                }
            },
            "service": {
                "extends": "AMAZON.Literal"
            }
        }
    },
    "RawDialogs": "",
    "UserNlg": {},
    "Catalog": {},
    "SimulatorConfig": {},
    "Language": {}
}